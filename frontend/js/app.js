// Generated by CoffeeScript 1.4.0
(function() {

  window.russel_module = angular.module('russel', []);

  $(window).resize(function(e) {
    var border, border_r, char_size, h, inner, inner_r, margin, margin_r, score_size, side, tiles, top_size, w;
    h = $(window).height();
    w = $(window).width();
    console.log(h, w);
    if (w > h) {
      w = h;
    }
    side = w / 4 * 0.98;
    inner = side * 0.8;
    margin = side * 0.1;
    border = side * 0.015;
    inner_r = Math.round(inner);
    border_r = Math.max(1, Math.round(border));
    margin_r = (Math.round(margin)) - border_r;
    char_size = Math.round(inner * 0.84);
    score_size = Math.round(inner * 0.2);
    top_size = Math.round(inner * 0.6);
    tiles = $('.tile').css('width', inner_r).css('height', inner_r).css('margin', margin_r).css('border-width', border_r);
    tiles.find('.char').css('font-size', char_size);
    tiles.find('.score').css('font-size', score_size);
    tiles.find('.shadow-score').css('font-size', score_size);
    return $('div.word').css('font-size', top_size);
  });

  russel_module.controller('TileCtrl', function() {
    return $(window).trigger('resize');
  });

  russel_module.controller('GridCtrl', function($scope) {
    var debug, in_snake;
    $scope.coord = [void 0, void 0];
    $scope.drawing = false;
    $scope.info = "";
    $scope.snake = [];
    $scope.grid = [["E", "N", "K", "N"], ["T", "R", "A", "G"], ["A", "P", "Ã…", "A"], ["L", "S", "V", "K"]];
    $scope.score = function(char) {
      return 1;
    };
    debug = function() {};
    $scope.down = function() {
      $scope.drawing = true;
      return $scope.push();
    };
    $scope.up = function() {
      $scope.drawing = false;
      return $scope.erase();
    };
    $scope.enter = function($event) {
      var char, elem, tile, x, x_str, y, y_str;
      if ($event.originalEvent.type === "touchmove") {
        $scope.drawing = true;
      }
      elem = $(document.elementFromPoint($event.pageX, $event.pageY));
      tile = elem.closest('.tile');
      char = tile.find('.char');
      x_str = tile.find('#x').text();
      y_str = tile.find('#y').text();
      if (x_str && y_str) {
        x = Number(x_str);
        y = Number(y_str);
        $scope.coord = [x, y];
        if ($scope.drawing) {
          return $scope.push();
        }
      }
    };
    in_snake = function(x, y) {
      return _.some($scope.snake, function(e) {
        return _.isEqual(e, [x, y]);
      });
    };
    $scope.push = function() {
      if (!in_snake.apply(null, $scope.coord)) {
        return $scope.snake.push($scope.coord);
      }
    };
    $scope.erase = function() {
      return $scope.snake = [];
    };
    $scope.status = function(x, y) {
      if (in_snake(x, y)) {
        return "selected";
      } else {
        return "";
      }
    };
    $scope.lookup = function(x, y) {
      return $scope.grid[y][x];
    };
    return $scope.word = function() {
      return (_.map($scope.snake, function(w) {
        return $scope.lookup.apply($scope, w);
      })).join('');
    };
  });

}).call(this);
