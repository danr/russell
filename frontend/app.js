// Generated by CoffeeScript 1.4.0
(function() {

  window.russel_module = angular.module('russel', []);

  russel_module.controller('GridCtrl', function($scope) {
    var debug, in_snake;
    $scope.coord = [void 0, void 0];
    $scope.drawing = false;
    $scope.info = "";
    $scope.snake = [];
    $scope.grid = [["E", "N", "K", "N"], ["T", "R", "A", "G"], ["A", "P", "Ã…", "A"], ["L", "S", "V", "K"]];
    $scope.score = function(char) {
      return 1;
    };
    debug = function() {};
    $scope.down = function() {
      $scope.drawing = true;
      return $scope.push();
    };
    $scope.up = function() {
      $scope.drawing = false;
      return $scope.erase();
    };
    $scope.enter = function($event) {
      var char, elem, tile, x, y;
      if ($event.originalEvent.type === "touchmove") {
        $scope.drawing = true;
      }
      elem = $(document.elementFromPoint($event.pageX, $event.pageY));
      tile = elem.closest('.tile');
      char = tile.find('.char');
      x = tile.find('.x').text();
      y = tile.find('.y').text();
      $scope.coord = [x, y];
      if ($scope.drawing && x && y) {
        return $scope.push();
      }
    };
    in_snake = function(x, y) {
      return _.some($scope.snake, function(e) {
        return _.isEqual(e, [x, y]);
      });
    };
    $scope.push = function() {
      if (!in_snake.apply(null, $scope.coord)) {
        return $scope.snake.push($scope.coord);
      }
    };
    $scope.erase = function() {
      return $scope.snake = [];
    };
    $scope.selected = in_snake;
    $scope.lookup = function(x, y) {
      return $scope.grid[y][x];
    };
    return $scope.word = function() {
      return (_.map($scope.snake, function(w) {
        return $scope.lookup.apply($scope, w);
      })).join('');
    };
  });

}).call(this);
